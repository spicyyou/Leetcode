class Trie {
public:
    /** Initialize your data structure here. */
    vector<string> vec;
    Trie() {
        vec.clear();
    }
    
    /** Inserts a word into the trie. */
    void insert(string word) {
        vec.push_back(word);
    }
    
    /** Returns if the word is in the trie. */
    bool search(string word) {
        for(int i=0;i<vec.size();i++){
            if(word==vec[i]){return true;}
        }return false;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    bool startsWith(string prefix) {
        for(int i=0;i<vec.size();i++){
            int isok=0;
            for(int j=0;j<prefix.length();j++){
                if(vec[i].length()<prefix.length()) break;
                if(vec[i][j]!=prefix[j]) {isok=0; break;}
                isok=1;
            }if(isok==1){return true;}
        }
        return false;
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
